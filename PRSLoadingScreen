local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local ContentProvider = game:GetService("ContentProvider")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera
local originalCameraType = camera.CameraType
local originalCameraSubject = camera.CameraSubject
local originalCameraPosition = camera.CFrame
local targetPosition = Vector3.new(48, 321, 30)
local isLoadingScreenActive = true
local minimumHeight = 321
local savedGuis = {}
local activeTween = nil

local function saveAndHideGuis()
    if player and player:FindFirstChild("PlayerGui") then
        for _, gui in pairs(player.PlayerGui:GetChildren()) do
            if gui:IsA("ScreenGui") or gui:IsA("BillboardGui") then
                table.insert(savedGuis, {instance = gui, enabled = gui.Enabled})
                gui.Enabled = false
            end
        end
        
        local billboardUI = player.PlayerGui:FindFirstChild("BillboardUI")
        if billboardUI then
            for _, gui in pairs(billboardUI:GetChildren()) do
                if gui:IsA("BillboardGui") then
                    table.insert(savedGuis, {instance = gui, enabled = gui.Enabled})
                    gui.Enabled = false
                end
            end
        end
    end
    
    for _, gui in pairs(game:GetService("CoreGui"):GetChildren()) do
        if gui:IsA("ScreenGui") and gui.Name ~= "CustomLoadingScreen" then
            table.insert(savedGuis, {instance = gui, enabled = gui.Enabled})
            gui.Enabled = false
        end
    end
    
    for _, gui in pairs(game:GetService("StarterGui"):GetChildren()) do
        if gui:IsA("ScreenGui") or gui:IsA("BillboardGui") then
            table.insert(savedGuis, {instance = gui, enabled = gui.Enabled})
            gui.Enabled = false
        end
    end
end

local function restoreGuis()
    for _, guiData in pairs(savedGuis) do
        if guiData.instance and guiData.instance:IsDescendantOf(game) then
            guiData.instance.Enabled = guiData.enabled
        end
    end
    savedGuis = {}
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CustomLoadingScreen"
screenGui.IgnoreGuiInset = true
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.DisplayOrder = 999
screenGui.Parent = game.CoreGui

local blurEffect = Instance.new("BlurEffect")
blurEffect.Size = 20
blurEffect.Parent = game.Lighting

local backgroundFrame = Instance.new("Frame")
backgroundFrame.Name = "Background"
backgroundFrame.Size = UDim2.fromScale(1, 1)
backgroundFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
backgroundFrame.BackgroundTransparency = 0
backgroundFrame.Parent = screenGui

local initialLoadingContainer = Instance.new("Frame")
initialLoadingContainer.Name = "InitialLoadingContainer"
initialLoadingContainer.Size = UDim2.fromScale(0.8, 0.6)
initialLoadingContainer.Position = UDim2.fromScale(0.5, 0.5)
initialLoadingContainer.AnchorPoint = Vector2.new(0.5, 0.5)
initialLoadingContainer.BackgroundTransparency = 1
initialLoadingContainer.Parent = screenGui

local loadingTitle = Instance.new("ImageLabel")
loadingTitle.Name = "GameIcon1"
loadingTitle.Size = UDim2.fromScale(0.5,0.6)
loadingTitle.Position = UDim2.fromScale(0.505, 0.15)
loadingTitle.AnchorPoint = Vector2.new(0.5, 0.5)
loadingTitle.BackgroundTransparency = 1
loadingTitle.Image = "rbxassetid://103945760063122"
loadingTitle.ImageColor3 = Color3.fromRGB(255,255,255)
loadingTitle.Parent = initialLoadingContainer

local loadingSubtitle = Instance.new("TextLabel")
loadingSubtitle.Name = "LoadingSubtitle"
loadingSubtitle.Size = UDim2.fromScale(1, 0.1)
loadingSubtitle.Position = UDim2.fromScale(0.5, 0.8)
loadingSubtitle.AnchorPoint = Vector2.new(0.5, 0.5)
loadingSubtitle.BackgroundTransparency = 1
loadingSubtitle.Font = Enum.Font.Gotham
loadingSubtitle.TextColor3 = Color3.fromRGB(200, 200, 200)
loadingSubtitle.TextSize = 30
loadingSubtitle.Text = "Loading game assets..."
loadingSubtitle.Parent = initialLoadingContainer

local loadingBarContainer = Instance.new("Frame")
loadingBarContainer.Name = "LoadingBarContainer"
loadingBarContainer.Size = UDim2.fromScale(0.9, 0.08)
loadingBarContainer.Position = UDim2.fromScale(0.5, 1)
loadingBarContainer.AnchorPoint = Vector2.new(0.5, 0.5)
loadingBarContainer.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
loadingBarContainer.BorderSizePixel = 0
loadingBarContainer.Parent = initialLoadingContainer

local loadingBarContainerCorner = Instance.new("UICorner")
loadingBarContainerCorner.CornerRadius = UDim.new(0.3, 0)
loadingBarContainerCorner.Parent = loadingBarContainer

local loadingBar = Instance.new("Frame")
loadingBar.Name = "LoadingBar"
loadingBar.Size = UDim2.fromScale(0, 1)
loadingBar.Position = UDim2.fromScale(0, 0)
loadingBar.BackgroundColor3 = Color3.fromRGB(85, 170, 127)
loadingBar.BorderSizePixel = 0
loadingBar.Parent = loadingBarContainer

local loadingBarCorner = Instance.new("UICorner")
loadingBarCorner.CornerRadius = UDim.new(0.3, 0)
loadingBarCorner.Parent = loadingBar

local loadingGradient = Instance.new("UIGradient")
loadingGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(85, 170, 127)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(100, 200, 150)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(85, 170, 127))
})
loadingGradient.Transparency = NumberSequence.new(0)
loadingGradient.Rotation = 45
loadingGradient.Parent = loadingBar

local loadingPercentage = Instance.new("TextLabel")
loadingPercentage.Name = "LoadingPercentage"
loadingPercentage.Size = UDim2.fromScale(1, 0.1)
loadingPercentage.Position = UDim2.fromScale(0.5, 0.9)
loadingPercentage.AnchorPoint = Vector2.new(0.5, 0.5)
loadingPercentage.BackgroundTransparency = 1
loadingPercentage.Font = Enum.Font.GothamSemibold
loadingPercentage.TextColor3 = Color3.fromRGB(255, 255, 255)
loadingPercentage.TextSize = 24
loadingPercentage.Text = "0%"
loadingPercentage.Parent = initialLoadingContainer

local loadingTip = Instance.new("TextLabel")
loadingTip.Name = "LoadingTip"
loadingTip.Size = UDim2.fromScale(0.9, 0.15)
loadingTip.Position = UDim2.fromScale(0.5, 1.1)
loadingTip.AnchorPoint = Vector2.new(0.5, 0.5)
loadingTip.BackgroundTransparency = 1
loadingTip.Font = Enum.Font.Gotham
loadingTip.TextColor3 = Color3.fromRGB(180, 180, 180)
loadingTip.TextSize = 18
loadingTip.Text = "Tip: Collect rare pets to increase your earnings!"
loadingTip.TextWrapped = true
loadingTip.Parent = initialLoadingContainer

local loadingTips = {
    "Tip: Collect rare pets to increase your earnings!",
    "Tip: Upgrade your ranch to unlock new areas and pets!",
    "Tip: Join our Discord community for exclusive rewards!",
    "Tip: Complete daily quests for bonus rewards!",
    "Tip: Trade with other players to get the pets you want!",
    "Tip: Hatch eggs for a chance to get legendary pets!",
    "Tip: The rarer the pet, the more coins it generates!",
    "Tip: Visit the shop to purchase boosts and special items!"
}

local mainContainer = Instance.new("Frame")
mainContainer.Name = "MainContainer"
mainContainer.Size = UDim2.fromScale(1, 1)
mainContainer.BackgroundTransparency = 1
mainContainer.Visible = false
mainContainer.Parent = screenGui

local GameIcon = Instance.new("ImageLabel")
GameIcon.Name = "GameIcon2"
GameIcon.Size = UDim2.fromScale(0.3,0.3)
GameIcon.Position = UDim2.fromScale(0.505, 0.35)
GameIcon.AnchorPoint = Vector2.new(0.5, 0.5)
GameIcon.BackgroundTransparency = 1
GameIcon.Image = "rbxassetid://103945760063122"
GameIcon.ImageColor3 = Color3.fromRGB(255,255,255)
GameIcon.ZIndex = 100
GameIcon.Parent = mainContainer

local playButton = Instance.new("TextButton")
playButton.Name = "PlayButton"
playButton.Size = UDim2.fromScale(0.2, 0.1)
playButton.Position = UDim2.fromScale(0.5, 0.7)
playButton.AnchorPoint = Vector2.new(0.5, 0.5)
playButton.BackgroundColor3 = Color3.fromRGB(85, 170, 127)
playButton.Font = Enum.Font.GothamBold
playButton.TextColor3 = Color3.fromRGB(255, 255, 255)
playButton.TextSize = 30
playButton.Text = "PLAY"
playButton.Parent = mainContainer

local cornerRadius = Instance.new("UICorner")
cornerRadius.CornerRadius = UDim.new(0.1, 0)
cornerRadius.Parent = playButton

local fadeFrame = Instance.new("Frame")
fadeFrame.Name = "FadeFrame"
fadeFrame.Size = UDim2.fromScale(1, 1)
fadeFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
fadeFrame.BackgroundTransparency = 1
fadeFrame.ZIndex = 10
fadeFrame.Parent = screenGui

playButton.MouseEnter:Connect(function()
    TweenService:Create(playButton, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(100, 200, 150), Size = UDim2.fromScale(0.22, 0.11)}):Play()
end)

playButton.MouseLeave:Connect(function()
    TweenService:Create(playButton, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(85, 170, 127), Size = UDim2.fromScale(0.2, 0.1)}):Play()
end)

playButton.MouseButton1Click:Connect(function()
    TweenService:Create(playButton, TweenInfo.new(0.1), {BackgroundColor3 = Color3.fromRGB(60, 120, 90), Size = UDim2.fromScale(0.19, 0.095)}):Play()
    
    wait(0.2)
    isLoadingScreenActive = false
    
    local fadeOutTween = TweenService:Create(fadeFrame, TweenInfo.new(1), {BackgroundTransparency = 0})
    fadeOutTween:Play()
    fadeOutTween.Completed:Wait()
    
    if activeTween then
        activeTween:Cancel()
    end
    
    camera.CameraType = originalCameraType
    camera.CameraSubject = originalCameraSubject
    camera.CFrame = originalCameraPosition
    
    restoreGuis()
    
    screenGui:Destroy()
    blurEffect:Destroy()
    
    local finalFadeFrame = Instance.new("Frame")
    finalFadeFrame.Size = UDim2.fromScale(1, 1)
    finalFadeFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    finalFadeFrame.BackgroundTransparency = 0
    finalFadeFrame.ZIndex = 999
    
    local finalScreenGui = Instance.new("ScreenGui")
    finalScreenGui.IgnoreGuiInset = true
    finalScreenGui.Parent = game.CoreGui
    finalFadeFrame.Parent = finalScreenGui
    
    TweenService:Create(finalFadeFrame, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
    wait(1.1)
    finalScreenGui:Destroy()
end)

local function fadeInOut(callback)
    local fadeInTween = TweenService:Create(fadeFrame, TweenInfo.new(1), {BackgroundTransparency = 0})
    fadeInTween:Play()
    fadeInTween.Completed:Wait()
    
    if callback then callback() end
    
    local fadeOutTween = TweenService:Create(fadeFrame, TweenInfo.new(1), {BackgroundTransparency = 1})
    fadeOutTween:Play()
    fadeOutTween.Completed:Wait()
end

local function willCameraClip(fromPosition, toPosition)
    local direction = (toPosition - fromPosition).Unit
    local distance = (toPosition - fromPosition).Magnitude
    
    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.FilterDescendantsInstances = {camera, player.Character}
    
    local raycastResult = workspace:Raycast(fromPosition, direction * distance, raycastParams)
    return raycastResult ~= nil
end

local function isValidCameraPosition(position)
    if position.Y < minimumHeight - 10 then
        return false
    end
    
    local direction = (targetPosition - position).Unit
    local distance = (targetPosition - position).Magnitude
    
    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.FilterDescendantsInstances = {camera, player.Character}
    
    local raycastResult = workspace:Raycast(position, direction * distance, raycastParams)
    if raycastResult then
        return false
    end
    
    return true
end

local function findValidCameraPosition(requestedPosition)
    if isValidCameraPosition(requestedPosition) then
        return requestedPosition
    end
    
    if requestedPosition.Y < minimumHeight then
        local adjustedPosition = Vector3.new(
            requestedPosition.X,
            minimumHeight + math.random(10, 30),
            requestedPosition.Z
        )
        
        if isValidCameraPosition(adjustedPosition) then
            return adjustedPosition
        end
    end
    
    local centerX, centerZ = requestedPosition.X, requestedPosition.Z
    local height = math.max(requestedPosition.Y, minimumHeight + 20)
    
    for radius = 10, 50, 10 do
        for angle = 0, 360, 45 do
            local rad = math.rad(angle)
            local testPosition = Vector3.new(
                centerX + radius * math.cos(rad),
                height,
                centerZ + radius * math.sin(rad)
            )
            
            if isValidCameraPosition(testPosition) then
                return testPosition
            end
        end
        
        height = height + 10
    end
    
    return Vector3.new(targetPosition.X, targetPosition.Y + 50, targetPosition.Z + 100)
end

local function tweenCamera(fromPosition, toPosition)
    if activeTween then
        activeTween:Cancel()
    end
    
    local validPosition = findValidCameraPosition(toPosition)
    
    if willCameraClip(fromPosition, validPosition) then
        validPosition = findValidCameraPosition(Vector3.new(
            validPosition.X + math.random(-20, 20),
            validPosition.Y + math.random(5, 15),
            validPosition.Z + math.random(-20, 20)
        ))
    end
    
    local tweenInfo = TweenInfo.new(
        6,
        Enum.EasingStyle.Cubic,
        Enum.EasingDirection.InOut
    )
    
    activeTween = TweenService:Create(camera, tweenInfo, {CFrame = CFrame.new(validPosition, targetPosition)})
    activeTween:Play()
    return activeTween
end

local PetContainer = Instance.new("Frame")
PetContainer.Name = "PetContainer"
PetContainer.Size = UDim2.fromScale(1, 1)
PetContainer.BackgroundTransparency = 1
PetContainer.Parent = mainContainer

local particleContainer = Instance.new("Frame")
particleContainer.Name = "ParticleContainer"
particleContainer.Size = UDim2.fromScale(2, 2)
particleContainer.Position = UDim2.fromScale(-0.5, -0.5)
particleContainer.BackgroundTransparency = 1
particleContainer.ZIndex = 0
particleContainer.Parent = initialLoadingContainer

local function createPawTrailSystem()
    local screenWidth = particleContainer.AbsoluteSize.X
    local screenHeight = particleContainer.AbsoluteSize.Y
    
    -- Starting position for the trail (left middle area)
    local currentX = screenWidth * 0.2
    local currentY = screenHeight * 0.5
    
    -- Direction and parameters
    local directionX = 1  -- Moving right
    local stepLength = 100 -- Average distance between paw prints
    local pathVariation = 15 -- How much the path can vary up/down
    
    -- Create paw prints along a path
    spawn(function()
        while true do
            -- Determine next position with some randomness
            currentX = currentX + (stepLength + math.random(-5, 10)) * directionX
            currentY = currentY + math.random(-pathVariation, pathVariation)
            
            -- Keep within middle area of screen
            currentX = math.clamp(currentX, screenWidth * 0.3, screenWidth * 0.8)
            currentY = math.clamp(currentY, screenHeight * 0.5, screenHeight * 0.7)
            
            -- Create a paw print at the current position
            local pawPrint = Instance.new("ImageLabel")
            pawPrint.Size = UDim2.fromOffset(80, 80) -- Bigger paw prints
            pawPrint.Position = UDim2.fromOffset(currentX, currentY)
            pawPrint.BackgroundTransparency = 1
            pawPrint.Image = "rbxassetid://3318943825"
            pawPrint.ImageTransparency = 0.2
            pawPrint.ImageColor3 = Color3.fromRGB(255, 255, 255)
            pawPrint.AnchorPoint = Vector2.new(0.5, 0.5)
            
            -- Rotate paws to point to the right (90 degrees + small random variation)
            pawPrint.Rotation = 90 + math.random(-10, 10)
            
            pawPrint.Parent = particleContainer
            
            -- Alternate between left and right paw prints by slightly offsetting Y and flipping rotation
            if math.random() > 0.5 then
                pawPrint.Position = UDim2.fromOffset(currentX, currentY + 25)
            end
            
            -- Fade out and remove the paw print after some time
            spawn(function()
                wait(math.random(1.5, 1.5)) -- Keep visible for a few seconds
                
                local fadeOutTween = TweenService:Create(
                    pawPrint,
                    TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.Out),
                    {ImageTransparency = 1}
                )
                fadeOutTween:Play()
                fadeOutTween.Completed:Wait()
                
                pawPrint:Destroy()
            end)
            
            -- When reaching right edge, reset to left side at a different height
            if currentX >= screenWidth * 1 then
                currentX = screenWidth * 0.2 -- Reset to left side
                currentY = math.random(screenHeight * 0.3, screenHeight * 0.7) -- Random height in middle area
            end
            
            -- Wait a bit before the next paw print
            wait(math.random(5, 10) / 10) -- 0.2 to 0.4 seconds between prints
        end
    end)
end


local function createShiningStars()
    for i = 1, 15 do
        local star = Instance.new("ImageLabel")
        star.Size = UDim2.fromOffset(math.random(10, 20), math.random(10, 20))
        star.Position = UDim2.fromScale(math.random(), math.random())
        star.BackgroundTransparency = 1
        star.Image = "rbxassetid://6444378561" -- Star image
        star.ImageColor3 = Color3.fromRGB(255, 255, 255)
        star.ImageTransparency = 0.5
        star.Parent = mainContainer
        
        spawn(function()
            while star.Parent do
                local sizeMult = math.random(80, 120) / 100
                
                local growTween = TweenService:Create(
                    star,
                    TweenInfo.new(math.random(1, 3), Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
                    {Size = UDim2.fromOffset(star.Size.X.Offset * sizeMult, star.Size.Y.Offset * sizeMult), ImageTransparency = 0.2}
                )
                growTween:Play()
                growTween.Completed:Wait()
                
                local shrinkTween = TweenService:Create(
                    star,
                    TweenInfo.new(math.random(1, 3), Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
                    {Size = UDim2.fromOffset(star.Size.X.Offset / sizeMult, star.Size.Y.Offset / sizeMult), ImageTransparency = 0.5}
                )
                shrinkTween:Play()
                shrinkTween.Completed:Wait()
            end
        end)
    end
end

    createPawTrailSystem()
    createShiningStars()

local function createFloatingPets()
    local petImages = {
    "rbxassetid://3971991086", --["Atomizer"] // rarity = "Premium"
    "rbxassetid://4154409297", --["Bolthead"] // rarity = "Premium"
    "rbxassetid://3752083716", --["Bubble Squid"] // rarity = "Premium"
    "rbxassetid://3326507167", --["Candy Unicorn"] // rarity = "Premium"
    "rbxassetid://3326569039", --["Celebration Trio"] // rarity = "Premium"
    "rbxassetid://3326507230", --["Crystal Golem"] // rarity = "Premium"
    "rbxassetid://3326507276", --["Cyber Phoenix"] // rarity = "Premium"
    "rbxassetid://3326507343", --["Electric Mouse"] // rarity = "Premium"
    "rbxassetid://3326525213", --["Flame Wolf"] // rarity = "Premium"
    "rbxassetid://3554098783", --["Funky Phoenix"] // rarity = "Premium"
    "rbxassetid://3421476046", --["Ghost Blob"] // rarity = "Premium"
    "rbxassetid://3324883091", --["Hatched Chick"] // rarity = "Premium"
    "rbxassetid://3326507408", --["Inferno Fox"] // rarity = "Premium"
    "rbxassetid://3326525278", --["Jester"] // rarity = "Premium"
    "rbxassetid://3326507471", --["Light Serpent"] // rarity = "Premium"
    "rbxassetid://3326616932", --["Lucky Tailed Fox"] // rarity = "Premium"
    "rbxassetid://3658310692", --["Polychrome"] // rarity = "Premium"
    "rbxassetid://3321471626", --["Rainbow Songbird"] // rarity = "Premium"
    "rbxassetid://3877248416", --["Studio Cat"] // rarity = "Premium"
    "rbxassetid://3971991254", --["Shiny Atomizer"] // rarity = "Premium"
    "rbxassetid://4154409438", --["Shiny Bolthead"] // rarity = "Premium"
    "rbxassetid://3752083860", --["Shiny Bubble Squid"] // rarity = "Premium"
    "rbxassetid://3326507581", --["Shiny Candy Unicorn"] // rarity = "Premium"
    "rbxassetid://3326569610", --["Shiny Celebration Trio"] // rarity = "Premium"
    "rbxassetid://3326507648", --["Shiny Crystal Golem"] // rarity = "Premium"
    "rbxassetid://3326507712", --["Shiny Cyber Phoenix"] // rarity = "Premium"
    "rbxassetid://3326507773", --["Shiny Electric Mouse"] // rarity = "Premium"
    "rbxassetid://3326507838", --["Shiny Flame Wolf"] // rarity = "Premium"
    "rbxassetid://3554098898", --["Shiny Funky Phoenix"] // rarity = "Premium"
    "rbxassetid://3421476150", --["Shiny Ghost Blob"] // rarity = "Premium"
    "rbxassetid://3324884003", --["Shiny Hatched Chick"] // rarity = "Premium"
    "rbxassetid://3326507902", --["Shiny Inferno Fox"] // rarity = "Premium"
    "rbxassetid://3326507962", --["Shiny Jester"] // rarity = "Premium"
    "rbxassetid://3326508017", --["Shiny Light Serpent"] // rarity = "Premium"
    "rbxassetid://3658310843", --["Shiny Polychrome"] // rarity = "Premium"
    "rbxassetid://3321471966", --["Shiny Rainbow Songbird"] // rarity = "Premium"
    "rbxassetid://3877247886", --["Shiny Studio Cat"] // rarity = "Premium"

    "rbxassetid://3971552009", --["Equinox"] // rarity = "Divine"
    "rbxassetid://4147750107", --["Firebrand"] // rarity = "Divine"
    "rbxassetid://3699327143", --["Neptune"] // rarity = "Divine"
    "rbxassetid://4322630556", --["Seraph"] // rarity = "Divine"
    "rbxassetid://3652597528", --["Zenith"] // rarity = "Divine"
    "rbxassetid://4147751210", --["Shiny Firebrand"] // rarity = "Divine"
    "rbxassetid://3652596988", --["Shiny Zenith"] // rarity = "Divine"

    "rbxassetid://3554077074", --["Aegis"] // rarity = "Mythic"
    "rbxassetid://3699327041", --["Catalyst"] // rarity = "Mythic"
    "rbxassetid://3652596042", --["Celestial Core"] // rarity = "Mythic"
    "rbxassetid://3326569299", --["Gala"] // rarity = "Mythic"
    "rbxassetid://4147750534", --["Necromancer"] // rarity = "Mythic"
    "rbxassetid://3324792910", --["Omni"] // rarity = "Mythic"
    "rbxassetid://3971552113", --["Plexus"] // rarity = "Mythic"
    "rbxassetid://3324821262", --["Prisma"] // rarity = "Mythic"
    "rbxassetid://3877248786", --["Whirlwind"] // rarity = "Mythic"
    "rbxassetid://3652596347", --["Shiny Celestial Core"] // rarity = "Mythic"
    "rbxassetid://3326569873", --["Shiny Gala"] // rarity = "Mythic"
    "rbxassetid://4147751621", --["Shiny Necromancer"] // rarity = "Mythic"
    "rbxassetid://3324793488", --["Shiny Omni"] // rarity = "Mythic"
    "rbxassetid://3324821908", --["Shiny Prisma"] // rarity = "Mythic"
    "rbxassetid://3877248268", --["Shiny Whirlwind"] // rarity = "Mythic"

    "rbxassetid://3652596423", --["100K Likes Glacial Serpent"] // rarity = "Legendary"
    "rbxassetid://3319625280", --["50M Albatross God"] // rarity = "Legendary"
    "rbxassetid://3326595761", --["50M Albatross King"] // rarity = "Legendary"
    "rbxassetid://3471249272", --["60M Chaotic Thunderbird"] // rarity = "Legendary"
    "rbxassetid://3472078786", --["60M Digital Thunderbird"] // rarity = "Legendary"
    "rbxassetid://3699317740", --["70M Overcharged Alicorn"] // rarity = "Legendary"
    "rbxassetid://3699317919", --["70M Soundwave Alicorn"] // rarity = "Legendary"
    "rbxassetid://3971551900", --["80M DJ Eagle"] // rarity = "Legendary"
    "rbxassetid://3971551745", --["80M Golden Sun Eagle"] // rarity = "Legendary"
    "rbxassetid://4315302022", --["90M Blackhole Phoenix"] // rarity = "Legendary"
    "rbxassetid://4315140017", --["90M Phoenix Flock"] // rarity = "Legendary"
    "rbxassetid://4147749761", --["Alchemist"] // rarity = "Legendary"
    "rbxassetid://3326474675", --["Alicorn"] // rarity = "Legendary"
    "rbxassetid://3321469672", --["Alien"] // rarity = "Legendary"
    "rbxassetid://3877246549", --["Ancient Earth Dragon"] // rarity = "Legendary"
    "rbxassetid://3321327577", --["Android Dragon"] // rarity = "Legendary"
    "rbxassetid://3321468526", --["Angel"] // rarity = "Legendary"
    "rbxassetid://3321396441", --["Cerberus"] // rarity = "Legendary"
    "rbxassetid://3324792629", --["Chimera"] // rarity = "Legendary"
    "rbxassetid://3471249433", --["Corrosive Phoenix"] // rarity = "Legendary"
    "rbxassetid://3324821000", --["Cthulhu"] // rarity = "Legendary"
    "rbxassetid://3326474785", --["Dark Phoenix"] // rarity = "Legendary"
    "rbxassetid://3324769191", --["Dark Serpent"] // rarity = "Legendary"
    "rbxassetid://3321468679", --["Demon"] // rarity = "Legendary"
    "rbxassetid://3324821083", --["Duality"] // rarity = "Legendary"
    "rbxassetid://3324883194", --["Easter Serpent"] // rarity = "Legendary"
    "rbxassetid://3324883284", --["Eggiverse"] // rarity = "Legendary"
    "rbxassetid://3554077246", --["Elemental Chimera"] // rarity = "Legendary"
    "rbxassetid://3326569181", --["Emperor"] // rarity = "Legendary"
    "rbxassetid://3321327717", --["Flame Fox"] // rarity = "Legendary"
    "rbxassetid://3321471318", --["Flare Alicorn"] // rarity = "Legendary"
    "rbxassetid://3326475396", --["Gargoyle"] // rarity = "Legendary"
    "rbxassetid://3554077323", --["Grim Demonlord"] // rarity = "Legendary"
    "rbxassetid://3554077394", --["Grotto Butterfly"] // rarity = "Legendary"
    "rbxassetid://3877246877", --["Guardian Angel"] // rarity = "Legendary"
    "rbxassetid://4147750409", --["Horror Serpent"] // rarity = "Legendary"
    "rbxassetid://3321469803", --["Ice Phoenix"] // rarity = "Legendary"
    "rbxassetid://3326475117", --["Imp"] // rarity = "Legendary"
    "rbxassetid://3321471512", --["Inferno Serpent"] // rarity = "Legendary"
    "rbxassetid://3324854479", --["Leprechaun"] // rarity = "Legendary"
    "rbxassetid://3324792977", --["Leviathan"] // rarity = "Legendary"
    "rbxassetid://3877247131", --["Lightning Satyr"] // rarity = "Legendary"
    "rbxassetid://3326475188", --["Luminous Fox"] // rarity = "Legendary"
    "rbxassetid://3324769459", --["Monster Fox"] // rarity = "Legendary"
    "rbxassetid://3554077482", --["Omega Gazer"] // rarity = "Legendary"
    "rbxassetid://3326569423", --["Phantom Cerberus"] // rarity = "Legendary"
    "rbxassetid://3471249810", --["Radiance"] // rarity = "Legendary"
    "rbxassetid://3554077588", --["Radioactive Monster Fox"] // rarity = "Legendary"
    "rbxassetid://3324853833", --["Rainbow Elementals"] // rarity = "Legendary"
    "rbxassetid://3656843464", --["Rift Observer"] // rarity = "Legendary"
    "rbxassetid://3324769635", --["Ruler"] // rarity = "Legendary"
    "rbxassetid://3326475264", --["Satyr"] // rarity = "Legendary"
    "rbxassetid://3652597129", --["Singularity"] // rarity = "Legendary"
    "rbxassetid://3554077680", --["Sky Unicorn"] // rarity = "Legendary"
    "rbxassetid://3471250541", --["Snow Elemental"] // rarity = "Legendary"
    "rbxassetid://3326475334", --["Sphinx"] // rarity = "Legendary"
    "rbxassetid://3321301489", --["Unicorn"] // rarity = "Legendary"
    "rbxassetid://3321397110", --["Vampire Dragon"] // rarity = "Legendary"
    "rbxassetid://3321472311", --["Void Gazer"] // rarity = "Legendary"
    "rbxassetid://3652597389", --["Warped Wraith"] // rarity = "Legendary"
    "rbxassetid://3324822252", --["Wisp"] // rarity = "Legendary"
    "rbxassetid://3554077861", --["Zeta Alien"] // rarity = "Legendary"
    "rbxassetid://4147750931", --["Shiny Alchemist"] // rarity = "Legendary"
    "rbxassetid://3321469993", --["Shiny Alien"] // rarity = "Legendary"
    "rbxassetid://3877247269", --["Shiny Ancient Earth Dragon"] // rarity = "Legendary"
    "rbxassetid://3321327975", --["Shiny Android Dragon"] // rarity = "Legendary"
    "rbxassetid://3321468917", --["Shiny Angel"] // rarity = "Legendary"
    "rbxassetid://3326596048", --["Shiny Baby Sowopent"] // rarity = "Legendary"
    "rbxassetid://3321396783", --["Shiny Cerberus"] // rarity = "Legendary"
    "rbxassetid://3324793074", --["Shiny Chimera"] // rarity = "Legendary"
    "rbxassetid://3471250034", --["Shiny Corrosive Phoenix"] // rarity = "Legendary"
    "rbxassetid://3324821610", --["Shiny Cthulhu"] // rarity = "Legendary"
    "rbxassetid://3324769737", --["Shiny Dark Serpent"] // rarity = "Legendary"
    "rbxassetid://3321469058", --["Shiny Demon"] // rarity = "Legendary"
    "rbxassetid://3324821754", --["Shiny Duality"] // rarity = "Legendary"
    "rbxassetid://3324884140", --["Shiny Easter Serpent"] // rarity = "Legendary"
    "rbxassetid://3324884225", --["Shiny Eggiverse"] // rarity = "Legendary"
    "rbxassetid://3326569738", --["Shiny Emperor"] // rarity = "Legendary"
    "rbxassetid://3321328105", --["Shiny Flame Fox"] // rarity = "Legendary"
    "rbxassetid://3321471739", --["Shiny Flare Alicorn"] // rarity = "Legendary"
    "rbxassetid://3877247516", --["Shiny Guardian Angel"] // rarity = "Legendary"
    "rbxassetid://4147751493", --["Shiny Horror Serpent"] // rarity = "Legendary"
    "rbxassetid://3321470132", --["Shiny Ice Phoenix"] // rarity = "Legendary"
    "rbxassetid://3321471848", --["Shiny Inferno Serpent"] // rarity = "Legendary"
    "rbxassetid://3324793394", --["Shiny Leviathan"] // rarity = "Legendary"
    "rbxassetid://3877247741", --["Shiny Lightning Satyr"] // rarity = "Legendary"
    "rbxassetid://3324769949", --["Shiny Monster Fox"] // rarity = "Legendary"
    "rbxassetid://3326570020", --["Shiny Phantom Cerberus"] // rarity = "Legendary"
    "rbxassetid://3471250372", --["Shiny Radiance"] // rarity = "Legendary"
    "rbxassetid://3652596674", --["Shiny Rift Observer"] // rarity = "Legendary"
    "rbxassetid://3324770355", --["Shiny Ruler"] // rarity = "Legendary"
    "rbxassetid://3652596742", --["Shiny Singularity"] // rarity = "Legendary"
    "rbxassetid://3471250459", --["Shiny Snow Elemental"] // rarity = "Legendary"
    "rbxassetid://3321301272", --["Shiny Unicorn"] // rarity = "Legendary"
    "rbxassetid://3321397063", --["Shiny Vampire Dragon"] // rarity = "Legendary"
    "rbxassetid://3321472138", --["Shiny Void Gazer"] // rarity = "Legendary"
    "rbxassetid://3652596913", --["Shiny Warped Wraith"] // rarity = "Legendary"
    "rbxassetid://3324821447", --["Shiny Wisp"] // rarity = "Legendary"

    "rbxassetid://3326595809", --["40M Light Leviathan"] // rarity = "Epic"
    "rbxassetid://3321272615", --["Angel Dog"] // rarity = "Epic"
    "rbxassetid://3321469728", --["Bee"] // rarity = "Epic"
    "rbxassetid://3321396301", --["Black Bear"] // rarity = "Epic"
    "rbxassetid://3324882897", --["Bunny Lord"] // rarity = "Epic"
    "rbxassetid://3326568936", --["Cake"] // rarity = "Epic"
    "rbxassetid://3554077156", --["Calico Cat"] // rarity = "Epic"
    "rbxassetid://3324853584", --["Celtic Owl"] // rarity = "Epic"
    "rbxassetid://3476136313", --["Cherry Blossom Owl"] // rarity = "Epic"
    "rbxassetid://3321396499", --["Dark Unicorn"] // rarity = "Epic"
    "rbxassetid://3471249598", --["Deep Sea Narwhal"] // rarity = "Epic"
    "rbxassetid://3321471266", --["Direwolf"] // rarity = "Epic"
    "rbxassetid://3326569102", --["Disco Robot"] // rarity = "Epic"
    "rbxassetid://3324883391", --["Eggster Flock"] // rarity = "Epic"
    "rbxassetid://3877246745", --["Ember Mouse"] // rarity = "Epic"
    "rbxassetid://3324792743", --["Fairy"] // rarity = "Epic"
    "rbxassetid://3326493843", --["Galaxy Dragon"] // rarity = "Epic"
    "rbxassetid://4147750270", --["Ghoul"] // rarity = "Epic"
    "rbxassetid://3321300956", --["Midnight Bat"] // rarity = "Epic"
    "rbxassetid://3321469928", --["Monkey"] // rarity = "Epic"
    "rbxassetid://3321471568", --["Moonbear"] // rarity = "Epic"
    "rbxassetid://3321468736", --["Narwhal"] // rarity = "Epic"
    "rbxassetid://3471249738", --["Nesting Eagles"] // rarity = "Epic"
    "rbxassetid://3324770888", --["Nova Fox"] // rarity = "Epic"
    "rbxassetid://3321468801", --["Owl"] // rarity = "Epic"
    "rbxassetid://3321327860", --["Panda"] // rarity = "Epic"
    "rbxassetid://3324821342", --["Roc"] // rarity = "Epic"
    "rbxassetid://4147750803", --["Scarecrow"] // rarity = "Epic"
    "rbxassetid://3554077778", --["Speckled Rabbit"] // rarity = "Epic"
    "rbxassetid://3652597250", --["Sprite Swarm"] // rarity = "Epic"
    "rbxassetid://3321472197", --["Thieving Crows"] // rarity = "Epic"
    "rbxassetid://3324822172", --["Thunderbird"] // rarity = "Epic"
    "rbxassetid://3877248536", --["Tropical Monkey"] // rarity = "Epic"
    "rbxassetid://3326570157", --["Wonderful Present"] // rarity = "Epic"
    "rbxassetid://3321272961", --["Shiny Angel Dog"] // rarity = "Epic"
    "rbxassetid://3321470062", --["Shiny Bee"] // rarity = "Epic"
    "rbxassetid://3321396676", --["Shiny Black Bear"] // rarity = "Epic"
    "rbxassetid://3324883798", --["Shiny Bunny Lord"] // rarity = "Epic"
    "rbxassetid://3326569532", --["Shiny Cake"] // rarity = "Epic"
    "rbxassetid://3471249956", --["Shiny Cherry Blossom Owl"] // rarity = "Epic"
    "rbxassetid://3321396849", --["Shiny Dark Unicorn"] // rarity = "Epic"
    "rbxassetid://3471249879", --["Shiny Deep Sea Narwhal"] // rarity = "Epic"
    "rbxassetid://3321471682", --["Shiny Direwolf"] // rarity = "Epic"
    "rbxassetid://3326569673", --["Shiny Disco Robot"] // rarity = "Epic"
    "rbxassetid://3324884316", --["Shiny Eggster Flock"] // rarity = "Epic"
    "rbxassetid://3877247400", --["Shiny Ember Mouse"] // rarity = "Epic"
    "rbxassetid://3324793165", --["Shiny Fairy"] // rarity = "Epic"
    "rbxassetid://4147751353", --["Shiny Ghoul"] // rarity = "Epic"
    "rbxassetid://3321301144", --["Shiny Midnight Bat"] // rarity = "Epic"
    "rbxassetid://3321470190", --["Shiny Monkey"] // rarity = "Epic"
    "rbxassetid://3321471903", --["Shiny Moonbear"] // rarity = "Epic"
    "rbxassetid://3321469102", --["Shiny Narwhal"] // rarity = "Epic"
    "rbxassetid://3471250281", --["Shiny Nesting Eagles"] // rarity = "Epic"
    "rbxassetid://3324770049", --["Shiny Nova Fox"] // rarity = "Epic"
    "rbxassetid://3321469162", --["Shiny Owl"] // rarity = "Epic"
    "rbxassetid://3321328221", --["Shiny Panda"] // rarity = "Epic"
    "rbxassetid://3324822013", --["Shiny Roc"] // rarity = "Epic"
    "rbxassetid://4147751883", --["Shiny Scarecrow"] // rarity = "Epic"
    "rbxassetid://3652596829", --["Shiny Sprite Swarm"] // rarity = "Epic"
    "rbxassetid://3321472023", --["Shiny Thieving Crows"] // rarity = "Epic"
    "rbxassetid://3324822097", --["Shiny Thunderbird"] // rarity = "Epic"
    "rbxassetid://3877248031", --["Shiny Tropical Monkey"] // rarity = "Epic"
    "rbxassetid://3326570094", --["Shiny Wonderful Present"] // rarity = "Epic"

    "rbxassetid://3326595635", --["10M Party Angel"] // rarity = "Rare"
    "rbxassetid://3326595503", --["1M Baby Serpent"] // rarity = "Rare"
    "rbxassetid://3326595937", --["20M Demon"] // rarity = "Rare"
    "rbxassetid://3326595696", --["30M Mouse"] // rarity = "Rare"
    "rbxassetid://3326595568", --["6M Baby Phoenix"] // rarity = "Rare"
    "rbxassetid://3319895464", --["Awesome Dog"] // rarity = "Rare"
    "rbxassetid://3324820925", --["Basilisk"] // rarity = "Rare"
    "rbxassetid://4147749952", --["Candy Corn Bat"] // rarity = "Rare"
    "rbxassetid://3471249515", --["Dalmation"] // rarity = "Rare"
    "rbxassetid://3324769317", --["Demon Dragon"] // rarity = "Rare"
    "rbxassetid://3324882989", --["Dogbun"] // rarity = "Rare"
    "rbxassetid://3324821169", --["Dwarf"] // rarity = "Rare"
    "rbxassetid://3326569235", --["Firework Mouse"] // rarity = "Rare"
    "rbxassetid://3321327655", --["Flame Butterfly"] // rarity = "Rare"
    "rbxassetid://3321396571", --["Frozen Wolf"] // rarity = "Rare"
    "rbxassetid://3326474870", --["Golden Cat"] // rarity = "Rare"
    "rbxassetid://3326474965", --["Golden Dog"] // rarity = "Rare"
    "rbxassetid://3324792831", --["Griffin"] // rarity = "Rare"
    "rbxassetid://3321471442", --["Horse"] // rarity = "Rare"
    "rbxassetid://3877246998", --["Jellyfish"] // rarity = "Rare"
    "rbxassetid://3321469868", --["Lava Slime"] // rarity = "Rare"
    "rbxassetid://3471251013", --["Lightspeed Bee"] // rarity = "Rare"
    "rbxassetid://3652596139", --["Moonlight Sphinx"] // rarity = "Rare"
    "rbxassetid://3652596213", --["Mossy Golem"] // rarity = "Rare"
    "rbxassetid://3326569354", --["Party Fox"] // rarity = "Rare"
    "rbxassetid://3324770445", --["Pegasus"] // rarity = "Rare"
    "rbxassetid://3324769540", --["Phoenix"] // rarity = "Rare"
    "rbxassetid://3326595872", --["Promo Mouse"] // rarity = "Rare"
    "rbxassetid://4147750685", --["Pumpkin"] // rarity = "Rare"
    "rbxassetid://3321468858", --["Robot"] // rarity = "Rare"
    "rbxassetid://3321272890", --["Sapphire Bunny"] // rarity = "Rare"
    "rbxassetid://3324854567", --["Spring Unicorn"] // rarity = "Rare"
    "rbxassetid://3321470382", --["Squid"] // rarity = "Rare"
    "rbxassetid://3324793773", --["Troll"] // rarity = "Rare"
    "rbxassetid://3877248666", --["Turkey"] // rarity = "Rare"
    "rbxassetid://3321472257", --["Turtle"] // rarity = "Rare"
    "rbxassetid://3321301540", --["Vampire Bat"] // rarity = "Rare"
    "rbxassetid://3324793842", --["Yeti"] // rarity = "Rare"
    "rbxassetid://3319957269", --["Shiny Awesome Dog"] // rarity = "Rare"
    "rbxassetid://3326595985", --["Shiny Baby Serpent"] // rarity = "Rare"
    "rbxassetid://3324821534", --["Shiny Basilisk"] // rarity = "Rare"
    "rbxassetid://4147751076", --["Shiny Candy Corn Bat"] // rarity = "Rare"
    "rbxassetid://3471250118", --["Shiny Dalmation"] // rarity = "Rare"
    "rbxassetid://3324769842", --["Shiny Demon Dragon"] // rarity = "Rare"
    "rbxassetid://3324883891", --["Shiny Dogbun"] // rarity = "Rare"
    "rbxassetid://3324821828", --["Shiny Dwarf"] // rarity = "Rare"
    "rbxassetid://3326569795", --["Shiny Firework Mouse"] // rarity = "Rare"
    "rbxassetid://3321328040", --["Shiny Flame Butterfly"] // rarity = "Rare"
    "rbxassetid://3321396923", --["Shiny Frozen Wolf"] // rarity = "Rare"
    "rbxassetid://3324793264", --["Shiny Griffin"] // rarity = "Rare"
    "rbxassetid://3321471795", --["Shiny Horse"] // rarity = "Rare"
    "rbxassetid://3877247625", --["Shiny Jellyfish"] // rarity = "Rare"
    "rbxassetid://3321470734", --["Shiny Lava Slime"] // rarity = "Rare"
    "rbxassetid://3471250205", --["Shiny Lightspeed Bee"] // rarity = "Rare"
    "rbxassetid://3652596501", --["Shiny Moonlight Sphinx"] // rarity = "Rare"
    "rbxassetid://3652596602", --["Shiny Mossy Golem"] // rarity = "Rare"
    "rbxassetid://3326569961", --["Shiny Party Fox"] // rarity = "Rare"
    "rbxassetid://3324770144", --["Shiny Pegasus"] // rarity = "Rare"
    "rbxassetid://3324770240", --["Shiny Phoenix"] // rarity = "Rare"
    "rbxassetid://4147751762", --["Shiny Pumpkin"] // rarity = "Rare"
    "rbxassetid://3321469214", --["Shiny Robot"] // rarity = "Rare"
    "rbxassetid://3321273211", --["Shiny Sapphire Bunny"] // rarity = "Rare"
    "rbxassetid://3321470797", --["Shiny Squid"] // rarity = "Rare"
    "rbxassetid://3324793579", --["Shiny Troll"] // rarity = "Rare"
    "rbxassetid://3877248140", --["Shiny Turkey"] // rarity = "Rare"
    "rbxassetid://3321472084", --["Shiny Turtle"] // rarity = "Rare"
    "rbxassetid://3321301348", --["Shiny Vampire Bat"] // rarity = "Rare"
    "rbxassetid://3324793682", --["Shiny Yeti"] // rarity = "Rare"

    "rbxassetid://3321396365", --["Brown Wolf"] // rarity = "Uncommon"
    "rbxassetid://3319895561", --["Bunny"] // rarity = "Uncommon"
    "rbxassetid://3321468618", --["Deer"] // rarity = "Uncommon"
    "rbxassetid://3321327798", --["Midnight Cat"] // rarity = "Uncommon"
    "rbxassetid://3324883483", --["Polka Dot Butterfly"] // rarity = "Uncommon"
    "rbxassetid://3321272831", --["Ruby Bunny"] // rarity = "Uncommon"
    "rbxassetid://3324853925", --["Shamrock Fox"] // rarity = "Uncommon"
    "rbxassetid://3321469337", --["Slime"] // rarity = "Uncommon"
    "rbxassetid://3321301417", --["Stone Dog"] // rarity = "Uncommon"
    "rbxassetid://3321470447", --["Tuxedo Cat"] // rarity = "Uncommon"
    "rbxassetid://3326596100", --["Youtube Cat"] // rarity = "Uncommon"
    "rbxassetid://3321396725", --["Shiny Brown Wolf"] // rarity = "Uncommon"
    "rbxassetid://3319957364", --["Shiny Bunny"] // rarity = "Uncommon"
    "rbxassetid://3321468985", --["Shiny Deer"] // rarity = "Uncommon"
    "rbxassetid://3321328173", --["Shiny Midnight Cat"] // rarity = "Uncommon"
    "rbxassetid://3324883581", --["Shiny Polka Dot Butterfly"] // rarity = "Uncommon"
    "rbxassetid://3321273142", --["Shiny Ruby Bunny"] // rarity = "Uncommon"
    "rbxassetid://3321469262", --["Shiny Slime"] // rarity = "Uncommon"
    "rbxassetid://3321301205", --["Shiny Stone Dog"] // rarity = "Uncommon"
    "rbxassetid://3321470334", --["Shiny Tuxedo Cat"] // rarity = "Uncommon"

    "rbxassetid://3321272690", --["Bat"] // rarity = "Common"
    "rbxassetid://3321300808", --["Blue Butterfly"] // rarity = "Common"
    "rbxassetid://3321300887", --["Brown Fox"] // rarity = "Common"
    "rbxassetid://3319895754", --["Dog"] // rarity = "Common"
    "rbxassetid://3319895844", --["Fox"] // rarity = "Common"
    "rbxassetid://3321272769", --["Ice Cat"] // rarity = "Common"
    "rbxassetid://3324853749", --["Lucky Cat"] // rarity = "Common"
    "rbxassetid://3321396625", --["Polar Bear"] // rarity = "Common"
    "rbxassetid://3321327915", --["Red Butterfly"] // rarity = "Common"
    "rbxassetid://3321328407", --["Snow Fox"] // rarity = "Common"
    "rbxassetid://3324884414", --["Sweets Bat"] // rarity = "Common"
    "rbxassetid://3319895658", --["White Cat"] // rarity = "Common"
    "rbxassetid://3321273354", --["Wolf"] // rarity = "Common"
    "rbxassetid://3321273024", --["Shiny Bat"] // rarity = "Common"
    "rbxassetid://3321301027", --["Shiny Blue Butterfly"] // rarity = "Common"
    "rbxassetid://3321301083", --["Shiny Brown Fox"] // rarity = "Common"
    "rbxassetid://3319957475", --["Shiny Dog"] // rarity = "Common"
    "rbxassetid://3319957578", --["Shiny Fox"] // rarity = "Common"
    "rbxassetid://3321273075", --["Shiny Ice Cat"] // rarity = "Common"
    "rbxassetid://3321396991", --["Shiny Polar Bear"] // rarity = "Common"
    "rbxassetid://3710867266", --["Shiny Red Butterfly"] // rarity = "Common"
    "rbxassetid://3321328346", --["Shiny Snow Fox"] // rarity = "Common"
    "rbxassetid://3324883683", --["Shiny Sweets Bat"] // rarity = "Common"
    "rbxassetid://3319957680", --["Shiny White Cat"] // rarity = "Common"
    "rbxassetid://3321273272" --["Shiny Wolf"] // rarity = "Common"
    }
    
for i = 1, 15 do
    local function createNewPet()
        local petFrame = Instance.new("Frame")
        petFrame.Size = UDim2.fromOffset(80, 80)
        petFrame.Position = UDim2.fromScale(
            0 + math.random() * 1, 
            -0.05 + math.random() * 0.2
        )
        petFrame.BackgroundTransparency = 1
        petFrame.Parent = PetContainer
        
        local petImage = Instance.new("ImageLabel")
        petImage.Size = UDim2.fromScale(1, 1)
        petImage.Position = UDim2.fromScale(0.5, 0.5)
        petImage.AnchorPoint = Vector2.new(0.5, 0.5)
        petImage.BackgroundTransparency = 1
        petImage.Image = petImages[math.random(1, #petImages)]
        petImage.ImageTransparency = 1
        petImage.Parent = petFrame
        
        local rotationDirection = math.random() > 0.5 and 1 or -1
        local floatSpeed = math.random(3, 6)
        local rotationSpeed = math.random(5, 15) * rotationDirection
        
        spawn(function()
            local startY = petFrame.Position.Y.Scale
            local time = 0
            local bounceCount = 0
            local previousSinValue = 0
            local currentSinValue = 0
            local isFadingOut = false
            
            spawn(function()
                for transparency = 1, 0, -0.05 do
                    if petImage and petImage.Parent then
                        petImage.ImageTransparency = transparency
                        wait(0.01)
                    else
                        break
                    end
                end
            end)
            
            while petFrame.Parent do
                time = time + 0.01
                
                previousSinValue = currentSinValue
                currentSinValue = math.sin(time * floatSpeed)
                
                if previousSinValue < 0 and currentSinValue >= 0 then
                    bounceCount = bounceCount + 1
                    
                    if bounceCount >= 2 and not isFadingOut then
                        isFadingOut = true
                        
                        spawn(function()
                            createNewPet()
                            
                            for transparency = 0, 1, 0.05 do
                                if petImage and petImage.Parent then
                                    petImage.ImageTransparency = transparency
                                    wait(0.01)
                                else
                                    break
                                end
                            end
                            
                            if petFrame and petFrame.Parent then
                                petFrame:Destroy()
                            end
                        end)
                    end
                end
                
                if petFrame.Parent then
                    petFrame.Position = UDim2.fromScale(
                        petFrame.Position.X.Scale,
                        startY + currentSinValue * 0.05
                    )
                    
                    petImage.Rotation = petImage.Rotation + (rotationSpeed * 0.1)
                end
                
                if isFadingOut and petImage.ImageTransparency >= 0.95 then
                    break
                end
                
                wait(0.01)
            end
        end)
    end
    
    createNewPet()
end
end


local function generateOrbitPosition(radius, heightVariation)
    local angle = math.random() * math.pi * 2
    local height = math.max(targetPosition.Y + math.random(-heightVariation, heightVariation), minimumHeight + 10)
    
    local x = targetPosition.X + radius * math.cos(angle)
    local z = targetPosition.Z + radius * math.sin(angle)
    
    return findValidCameraPosition(Vector3.new(x, height, z))
end

local function generateOrbitSequence(startAngle, endAngle, steps, radius, height)
    local positions = {}
    local angleStep = (endAngle - startAngle) / steps
    
    for i = 0, steps do
        local angle = startAngle + (angleStep * i)
        local x = targetPosition.X + radius * math.cos(angle)
        local z = targetPosition.Z + radius * math.sin(angle)
        local position = Vector3.new(x, height, z)
        
        table.insert(positions, findValidCameraPosition(position))
    end
    
    return positions
end

local orbitScenarios = {
    function()
        local radius = 100
        local height = targetPosition.Y + 50
        local startPos = generateOrbitPosition(radius, 10)
        camera.CFrame = CFrame.new(startPos, targetPosition)
        
        local startAngle = math.atan2(startPos.Z - targetPosition.Z, startPos.X - targetPosition.X)
        local endAngle = startAngle + math.pi
        local orbitPositions = generateOrbitSequence(startAngle, endAngle, 5, radius, height)
        
        for i = 2, #orbitPositions do
            if not isLoadingScreenActive then break end
            tweenCamera(orbitPositions[i-1], orbitPositions[i]).Completed:Wait()
        end
    end,
    
    function()
        local radius = 60
        local height = math.max(targetPosition.Y - 20, minimumHeight + 15)
        local startPos = generateOrbitPosition(radius, 5)
        
        fadeInOut(function()
            camera.CFrame = CFrame.new(startPos, targetPosition)
        end)
        
        if not isLoadingScreenActive then return end
        
        local startAngle = math.atan2(startPos.Z - targetPosition.Z, startPos.X - targetPosition.X)
        local endAngle = startAngle + math.pi * 1.5
        local orbitPositions = generateOrbitSequence(startAngle, endAngle, 6, radius, height)
        
        for i = 2, #orbitPositions do
            if not isLoadingScreenActive then break end
            tweenCamera(orbitPositions[i-1], orbitPositions[i]).Completed:Wait()
        end
    end,
    
    function()
        local radius = 80
        local startHeight = targetPosition.Y + 30
        local endHeight = math.max(targetPosition.Y - 10, minimumHeight + 20)
        
        local startAngle = math.random() * math.pi * 2
        local endAngle = startAngle + math.pi
        local steps = 5
        
        local positions = {}
        local angleStep = (endAngle - startAngle) / steps
        local heightStep = (endHeight - startHeight) / steps
        
        for i = 0, steps do
            local angle = startAngle + (angleStep * i)
            local height = startHeight + (heightStep * i)
            local x = targetPosition.X + radius * math.cos(angle)
            local z = targetPosition.Z + radius * math.sin(angle)
            local position = Vector3.new(x, height, z)
            
            table.insert(positions, findValidCameraPosition(position))
        end
        
        fadeInOut(function()
            camera.CFrame = CFrame.new(positions[1], targetPosition)
        end)
        
        if not isLoadingScreenActive then return end
        
        for i = 2, #positions do
            if not isLoadingScreenActive then break end
            tweenCamera(positions[i-1], positions[i]).Completed:Wait()
        end
    end,
    
    function()
        for i = 1, 3 do
            if not isLoadingScreenActive then break end
            
            local radius = math.random(70, 120)
            local height = math.max(targetPosition.Y + math.random(-30, 50), minimumHeight + 15)
            local startAngle = math.random() * math.pi * 2
            local endAngle = startAngle + math.pi * 0.5
            
            local positions = generateOrbitSequence(startAngle, endAngle, 3, radius, height)
            
            fadeInOut(function()
                camera.CFrame = CFrame.new(positions[1], targetPosition)
            end)
            
            if not isLoadingScreenActive then break end
            
            for j = 2, #positions do
                if not isLoadingScreenActive then break end
                tweenCamera(positions[j-1], positions[j]).Completed:Wait()
            end
        end
    end
}

local function simulateLoading()
    local currentPercentage = 0
    local targetPercentage = 100
    local loadingSpeed = math.random(1, 3)
    local currentTip = 1
    
    loadingTip.Text = loadingTips[currentTip]
    
    while currentPercentage < targetPercentage do
        currentPercentage = math.min(currentPercentage + math.random(1, 3), targetPercentage)
        
        loadingPercentage.Text = currentPercentage .. "%"
        TweenService:Create(loadingBar, TweenInfo.new(0.2), {Size = UDim2.fromScale(currentPercentage/100, 1)}):Play()
        
        if currentPercentage % 25 == 0 then
            currentTip = (currentTip % #loadingTips) + 1
            local oldText = loadingTip.Text
            
            TweenService:Create(loadingTip, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
            wait(0.5)
            loadingTip.Text = loadingTips[currentTip]
            loadingTip.TextTransparency = 1
            TweenService:Create(loadingTip, TweenInfo.new(0.5), {TextTransparency = 0}):Play()
        end
        
        if currentPercentage < 30 then
            wait(math.random(5, 15) / 100)
        elseif currentPercentage < 60 then
            wait(math.random(3, 10) / 100)
        elseif currentPercentage < 90 then
            wait(math.random(10, 20) / 100)
        else
            wait(math.random(20, 40) / 100)
        end
        
        if currentPercentage == 35 then
            loadingSubtitle.Text = "Preparing environment..."
        elseif currentPercentage == 65 then
            loadingSubtitle.Text = "Loading pet data..."
        elseif currentPercentage == 85 then
            loadingSubtitle.Text = "Finalizing..."
        end
    end
    
    wait(0.5)
    
    -- Fade out the loading container
    TweenService:Create(initialLoadingContainer, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
    
    -- Create a tween group to fade out all text elements
    local tweens = {}
    for _, element in pairs(initialLoadingContainer:GetDescendants()) do
        if element:IsA("TextLabel") then
            table.insert(tweens, TweenService:Create(element, TweenInfo.new(1), {TextTransparency = 1}))
        elseif element:IsA("ImageLabel") then
            table.insert(tweens, TweenService:Create(element, TweenInfo.new(1), {ImageTransparency = 1}))
        elseif element:IsA("Frame") and element ~= initialLoadingContainer then
            table.insert(tweens, TweenService:Create(element, TweenInfo.new(1), {BackgroundTransparency = 1}))
        end
    end
    
    -- Play all tweens
    for _, tween in ipairs(tweens) do
        tween:Play()
    end
    
    wait(1)
    
    initialLoadingContainer.Visible = false
    mainContainer.Visible = true
    
    TweenService:Create(backgroundFrame, TweenInfo.new(1), {BackgroundTransparency = 0.5}):Play()
    
    createFloatingPets()
end



originalCameraType = camera.CameraType
originalCameraSubject = camera.CameraSubject
originalCameraPosition = camera.CFrame

camera.CameraType = Enum.CameraType.Scriptable

saveAndHideGuis()

spawn(function()
    simulateLoading()
    
    local initialPos = generateOrbitPosition(90, 20)
    camera.CFrame = CFrame.new(initialPos, targetPosition)
    
    local scenarioIndex = 1
    
    while isLoadingScreenActive do
        orbitScenarios[scenarioIndex]()
        
        if not isLoadingScreenActive then break end
        
        scenarioIndex = (scenarioIndex % #orbitScenarios) + 1
    end
end)

local function createPulsingEffect(guiObject)
    spawn(function()
        while guiObject and guiObject.Parent do
            local growTween = TweenService:Create(
                guiObject,
                TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
                {Size = UDim2.fromScale(0.21, 0.105)}
            )
            growTween:Play()
            wait(1.5)
            
            local shrinkTween = TweenService:Create(
                guiObject,
                TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
                {Size = UDim2.fromScale(0.2, 0.1)}
            )
            shrinkTween:Play()
            wait(1.5)
        end
    end)
end

createPulsingEffect(playButton)

local function createLoadingBarAnimation()
    spawn(function()
        while loadingBar.Parent do
            TweenService:Create(loadingGradient, TweenInfo.new(2), {Offset = Vector2.new(1, 0)}):Play()
            wait(2)
            loadingGradient.Offset = Vector2.new(-1, 0)
            TweenService:Create(loadingGradient, TweenInfo.new(2), {Offset = Vector2.new(0, 0)}):Play()
            wait(2)
        end
    end)
end

createLoadingBarAnimation()

local function createBackgroundAnimation()
    -- Create a container for the animated elements
    local animationContainer = Instance.new("Frame")
    animationContainer.Size = UDim2.fromScale(1, 1)
    animationContainer.BackgroundTransparency = 1
    animationContainer.ZIndex = 1
    animationContainer.Parent = backgroundFrame
    
    local TweenService = game:GetService("TweenService")
    
    spawn(function()
        while animationContainer.Parent do
            -- Create a new particle
            local particle = Instance.new("Frame")
            particle.Size = UDim2.fromOffset(math.random(3, 8), math.random(3, 8))
            particle.Position = UDim2.fromScale(math.random(), 1.1) -- Start from bottom
            particle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            particle.BackgroundTransparency = 0.9
            particle.ZIndex = 2
            particle.Parent = animationContainer
            
            -- Make it round
            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(1, 0)
            corner.Parent = particle
            
            -- Animate the particle floating upward with continuous movement
            spawn(function()
                local duration = math.random(10, 18)
                local startX = particle.Position.X.Scale
                local horizontalDrift = math.random(-15, 15)/100
                
                local tween = TweenService:Create(
                    particle,
                    TweenInfo.new(
                        duration, 
                        Enum.EasingStyle.Linear, 
                        Enum.EasingDirection.Out,
                        0,      -- repeatCount (0 = don't repeat)
                        false,  -- reverses
                        0       -- delayTime
                    ),
                    {
                        Position = UDim2.fromScale(
                            startX + horizontalDrift,
                            -0.1  -- Move above the screen
                        ),
                        BackgroundTransparency = 1,
                        Size = UDim2.fromOffset(
                            particle.Size.X.Offset * 1.5,
                            particle.Size.Y.Offset * 1.5
                        )
                    }
                )
                
                tween:Play()
                
                delay(duration, function()
                    particle:Destroy()
                end)
            end)
            
            wait(math.random(1, 3)/10) -- Create particles at random intervals
        end
    end)
    
    return animationContainer
end

return createBackgroundAnimation()
